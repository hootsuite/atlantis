// Automatically generated by pegomock. DO NOT EDIT!
// Source: github.com/hootsuite/atlantis/server/events (interfaces: ModifiedProjectDetector)

package mocks

import (
	"reflect"

	models "github.com/hootsuite/atlantis/server/events/models"
	pegomock "github.com/petergtz/pegomock"
)

type MockModifiedProjectDetector struct {
	fail func(message string, callerSkip ...int)
}

func NewMockModifiedProjectDetector() *MockModifiedProjectDetector {
	return &MockModifiedProjectDetector{fail: pegomock.GlobalFailHandler}
}

func (mock *MockModifiedProjectDetector) GetModified(files []string) []models.Project {
	params := []pegomock.Param{files}
	result := pegomock.GetGenericMockFrom(mock).Invoke("GetModified", params, []reflect.Type{reflect.TypeOf((*[]models.Project)(nil)).Elem()})
	var ret0 []models.Project
	if len(result) != 0 {
		if result[0] != nil {
			ret0 = result[0].([]models.Project)
		}
	}
	return ret0
}

func (mock *MockModifiedProjectDetector) VerifyWasCalledOnce() *VerifierModifiedProjectDetector {
	return &VerifierModifiedProjectDetector{mock, pegomock.Times(1), nil}
}

func (mock *MockModifiedProjectDetector) VerifyWasCalled(invocationCountMatcher pegomock.Matcher) *VerifierModifiedProjectDetector {
	return &VerifierModifiedProjectDetector{mock, invocationCountMatcher, nil}
}

func (mock *MockModifiedProjectDetector) VerifyWasCalledInOrder(invocationCountMatcher pegomock.Matcher, inOrderContext *pegomock.InOrderContext) *VerifierModifiedProjectDetector {
	return &VerifierModifiedProjectDetector{mock, invocationCountMatcher, inOrderContext}
}

type VerifierModifiedProjectDetector struct {
	mock                   *MockModifiedProjectDetector
	invocationCountMatcher pegomock.Matcher
	inOrderContext         *pegomock.InOrderContext
}

func (verifier *VerifierModifiedProjectDetector) GetModified(files []string) *ModifiedProjectDetector_GetModified_OngoingVerification {
	params := []pegomock.Param{files}
	methodInvocations := pegomock.GetGenericMockFrom(verifier.mock).Verify(verifier.inOrderContext, verifier.invocationCountMatcher, "GetModified", params)
	return &ModifiedProjectDetector_GetModified_OngoingVerification{mock: verifier.mock, methodInvocations: methodInvocations}
}

type ModifiedProjectDetector_GetModified_OngoingVerification struct {
	mock              *MockModifiedProjectDetector
	methodInvocations []pegomock.MethodInvocation
}

func (c *ModifiedProjectDetector_GetModified_OngoingVerification) GetCapturedArguments() []string {
	files := c.GetAllCapturedArguments()
	return files[len(files)-1]
}

func (c *ModifiedProjectDetector_GetModified_OngoingVerification) GetAllCapturedArguments() (_param0 [][]string) {
	params := pegomock.GetGenericMockFrom(c.mock).GetInvocationParams(c.methodInvocations)
	if len(params) > 0 {
		_param0 = make([][]string, len(params[0]))
		for u, param := range params[0] {
			_param0[u] = param.([]string)
		}
	}
	return
}
